! pip install basedosdados geopandas
import pandas as pd
import basedosdados as bd
import geopandas as gp
import matplotlib.pyplot as plt

# Carregar ID municípios
mun = bd.read_table(dataset_id='br_bd_diretorios_brasil',
                    table_id='municipio',
                    billing_project_id="<YOUR_PROJECT_ID>")

# Excluir colunas que não serão usadas
munic = mun.drop(['id_municipio_tse', 'id_municipio_rf', 'id_municipio_bcb', 'capital_uf', 'id_comarca', 'id_regiao_saude', 'regiao_saude', 'id_regiao_imediata', 'regiao_imediata', 'id_regiao_intermediaria', 'regiao_intermediaria', 'id_microrregiao', 'microrregiao', 'id_mesorregiao', 'mesorregiao', 'ddd', 'id_uf', 'sigla_uf', 'nome_uf', 'regiao'], axis=1)
# Renomear Colunas
munic = munic.rename(columns={'id_municipio': 'cod_municipio', 'id_municipio_6': 'id_municipio'})
# Download Lat Long Municípios
coord = pd.read_csv('Sedes_Coordenadas_Municipios.csv', sep=';')
# Renomear Colunas
coord = coord.rename(columns={'CODIGO MUNICIPIO': 'id_municipio'})
# # Converter colunas com números em dados numéricos
munic.id_municipio=pd.to_numeric(munic.id_municipio)
coord.id_municipio=pd.to_numeric(coord.id_municipio)
# Mesclar os DataFrame
municipios = pd.merge(munic, coord, how = 'inner', on = 'id_municipio')
# Renomear Colunas
municipios = municipios.rename(columns={'id_municipio_6': 'id_IBGE', 'nome': 'municipio', 'LATITUDE': 'lat', 'LONGITUDE': 'lon'})

# Carregar Dados da PAM-IBGE
df = bd.read_table(dataset_id='br_ibge_pam', 
        table_id='municipio_lavouras_temporarias',
        billing_project_id="YOUR_PROJECT_ID")

ano_ini = 1974   # Ano Inicial
ano_end = 2019  # Ano Final
ano_int = 1   # Intervalo

for ano in range(ano_ini, ano_end + 1, ano_int):
  # Excluir colunas
  dg = df.drop(['prop_valor_producao', 'prop_area_colhida', 'prop_area_plantada', 'valor_producao', 'quantidade_produzida', 'area_colhida', 'area_plantada'], axis=1)
  # Filtrar Soja (em grão)
  dp = dg.loc[dg['produto'] == 'Soja (em grão)']
  # Filtrar Ano-Safra
  dp = dp.loc[dp['ano'] == ano]
  # Renomear Colunas
  dp = dp.rename(columns={'id_municipio': 'cod_municipio'})
  # Mesclar os Dados
  mesclar = pd.merge(dp, municipios, how = 'inner', on = 'cod_municipio')
  # Remover Linhas com NaN
  mesclar_final = mesclar[mesclar['rendimento_medio'].notna()]
  gdf = gp.GeoDataFrame(mesclar_final, geometry=gp.points_from_xy(mesclar_final.lon, mesclar_final.lat))
  
  # Plotar Mapa
  fig, ax = plt.subplots(figsize=(15, 15))
  fig.patch.set_facecolor('xkcd:salmon')
  ax.set_facecolor('xkcd:salmon')
  world = gp.read_file(gp.datasets.get_path('naturalearth_lowres'))
  # Mapa do Brasil
  ax = world[world.name == 'Brazil'].plot(ax=ax, color='white', edgecolor='black')
  # Plotar GeoDataFrame
  gdf.plot(ax=ax, color='red')
  # Adiciona a fonte como nota de rodapé
  fig.text(0.15,                  # Posição x
          0.13,                  # Posição y
          'Fonte: IBGE (Soja-Safra_'+ str(ano)+')', fontsize=20)
  plt.savefig('image_' + str(ano) + '.png', bbox_inches='tight', pad_inches=0, dpi=100)
  plt.show()
 
 import imageio

# Images para incluir no GIF
files = ['image_1974.png','image_1975.png','image_1976.png','image_1977.png', 
         'image_1978.png','image_1979.png','image_1980.png','image_1981.png',
         'image_1982.png','image_1983.png','image_1984.png','image_1985.png',
         'image_1986.png','image_1987.png','image_1988.png','image_1989.png',
         'image_1990.png','image_1991.png','image_1992.png','image_1993.png',
         'image_1994.png','image_1995.png','image_1996.png','image_1997.png',
         'image_1998.png','image_1999.png','image_2000.png','image_2001.png',
         'image_2002.png','image_2003.png','image_2004.png','image_2005.png',
         'image_2006.png','image_2007.png','image_2008.png','image_2009.png',
         'image_2010.png','image_2011.png','image_2012.png','image_2013.png',
         'image_2014.png','image_2015.png','image_2016.png','image_2017.png',
         'image_2018.png','image_2019.png',]

# Criar o GIF
images = []
for file in files:
    images.append(imageio.imread(file))
imageio.mimsave('animation.gif', images, fps=1)

# Abrir o GIF
print("\nOpening the GIF..\n")
from IPython.display import Image
Image(open('animation.gif','rb').read())
